---
import MainLayout from '../layouts/MainLayout.astro';
import TagButton from '../components/TagButton.astro';
import { getCollection } from 'astro:content';

// Get all unique tags across all directory items
const allDirectoryItems = await getCollection('directory');
const tagsMap = new Map();

allDirectoryItems.forEach(item => {
  item.data.tags.forEach(tag => {
    tagsMap.set(tag, (tagsMap.get(tag) || 0) + 1);
  });
});

// Sort tags by count (descending)
const sortedTags = [...tagsMap.entries()].sort((a, b) => b[1] - a[1]);

// Group tags alphabetically
const tagsByLetter = new Map();
for (const [tag, count] of sortedTags) {
  const firstLetter = tag.charAt(0).toUpperCase();
  if (!tagsByLetter.has(firstLetter)) {
    tagsByLetter.set(firstLetter, []);
  }
  tagsByLetter.get(firstLetter).push([tag, count]);
}

// Sort the letters alphabetically
const sortedLetters = [...tagsByLetter.keys()].sort();
---

<MainLayout title="Browse Categories">
  <div class="mb-8">
    <h1 class="text-3xl font-bold mb-2">
      Browse <span class="text-[#5CEBA1]">Categories</span>
    </h1>
    <p class="text-gray-600">
      Explore directory listings by category
    </p>
  </div>
  
  <div class="bg-white border border-gray-200 rounded-lg p-8">
    <div class="flex items-center justify-center gap-2 mb-8 flex-wrap">
      {sortedLetters.map(letter => (
        <a href={`#${letter}`} class="w-8 h-8 flex items-center justify-center rounded-full hover:bg-[#5CEBA1]/10 text-gray-600 hover:text-[#5CEBA1] font-medium">
          {letter}
        </a>
      ))}
    </div>
    
    <div class="space-y-8">
      {sortedLetters.map(letter => (
        <div id={letter} class="scroll-mt-16">
          <h2 class="text-xl font-bold border-b border-gray-200 pb-2 mb-4 flex items-center">
            <span class="inline-block w-8 h-8 bg-[#5CEBA1]/10 text-[#5CEBA1] rounded-full flex items-center justify-center mr-2">
              {letter}
            </span>
            Categories starting with {letter}
          </h2>
          
          <div class="flex flex-wrap gap-3">
            {tagsByLetter.get(letter).map(([tag, count]) => (
              <a href={`/category/${tag}`} class="bg-white border border-gray-200 rounded-full px-4 py-2 text-sm flex items-center gap-2 hover:border-[#5CEBA1] hover:text-[#5CEBA1] transition-colors">
                <span>{tag}</span>
                <span class="bg-gray-100 text-gray-600 rounded-full px-2 py-0.5 text-xs">{count}</span>
              </a>
            ))}
          </div>
        </div>
      ))}
    </div>
  </div>
</MainLayout>
